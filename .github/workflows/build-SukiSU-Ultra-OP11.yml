name: Build OP11-GKI SukiSU-Ultra
permissions:
  contents: write  # Allow writing to repository contents (for pushing tags)
  actions: write   # Allows triggering actions

on:
  workflow_dispatch: 

jobs:
  build-kernel-kernelsu-susfs:
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          swap-size-mb: 8192
          remove-dotnet: "true"
          remove-android: "true"
          remove-haskell: "true"
          remove-codeql: "true"

      - name: 安装 ccache
        run: sudo apt update && sudo apt upgrade -y && sudo apt install -y ccache python3 git curl

      - name: 配置 ccache
        run: |
          mkdir -p ~/.cache/bazel
          ccache --version
          ccache --max-size=2G
          ccache --set-config=compression=true
          echo "CCACHE_DIR=$HOME/.ccache" >> $GITHUB_ENV
      
      - name: 缓存工具链
        id: cache-toolchain
        uses: actions/cache@v4
        with:
          path: |
            kernel-build-tools
            mkbootimg
          key: toolchain-${{ runner.os }}-v1

      - name: 下载工具链（如果未找到缓存）
        if: steps.cache-toolchain.outputs.cache-hit != 'true'
        run: |
          AOSP_MIRROR=https://android.googlesource.com
          BRANCH=main-kernel-build-2024
          git clone $AOSP_MIRROR/kernel/prebuilts/build-tools -b $BRANCH --depth 1 kernel-build-tools
          git clone $AOSP_MIRROR/platform/system/tools/mkbootimg -b $BRANCH --depth 1 mkbootimg

      - name: 安装仓库
        run: |
          mkdir -p ./git-repo
          curl https://storage.googleapis.com/git-repo-downloads/repo > ./git-repo/repo
          chmod a+rx ./git-repo/repo
          echo "REPO=$GITHUB_WORKSPACE/./git-repo/repo" >> $GITHUB_ENV

      - name: 克隆 AnyKernel3 和其他依赖项
        run: |
          cd ~
          echo "Cloning AnyKernel3 and other dependencies..."

          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-android13-5.15
          git clone https://github.com/WildPlusKernel/kernel_patches.git
          # Sukisu的补丁仓库
          git clone https://github.com/ShirkNeko/SukiSU_patch.git
          
          cp -r ./SukiSU_patch/AnyKernel3/ ./

      - name: 初始化和同步内核源代码
        run: |
          cd ~
          mkdir -p op11
          cd op11

          # Initialize and sync kernel source
          echo "Initializing and syncing kernel source..."

          repo init --depth=1 --u https://github.com/OnePlusOSS/kernel_manifest.git -b oneplus_11_t.xml --repo-rev=v2.16

          # Sync repo and apply patches
          repo --version
          repo --trace sync -c -j$(nproc --all) --no-tags --fail-fast
      
      - name: 添加 KernelSU
        run: |
          cd ~/op11/kernel_platform

            echo "Adding KernelSU SukiSU..."
            curl -LSs "https://raw.githubusercontent.com/ShirkNeko/SukiSU-Ultra/main/kernel/setup.sh" | bash -s susfs-dev
          
      - name: 为 KernelSU 变体安装 SUSFS 补丁
        run: |
          cd ~/op11/kernel_platform
          
          echo "Applying SUSFS patches..."
          
          cp ../../susfs4ksu/kernel_patches/50_add_susfs_in_gki-android13-5.15.patch ./common/
          cp ../../susfs4ksu/kernel_patches/fs/* ./common/fs/
          cp ../../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/
  
          cd ../common
          patch -p1 --fuzz=3 < 50_add_susfs_in_gki-android13-5.15.patch || true

      - name: 应用新的HOOKS补丁
        run: |
          cd ~/op11/kernel_platform/common
          cp ../../../SukiSU_patch/hooks/syscall_hooks.patch ./
          patch -p1 -F 3 < syscall_hooks.patch
          
      - name: 复制源文件&应用LZ4KD补丁
        run: |
          cd ~/op11/kernel_platform/common
          cp -r ../../../SukiSU_patch/other/zram/lz4k/include/linux/* ./include/linux/
          cp -r ../../../SukiSU_patch/other/zram/lz4k/lib/* ./lib/
          cp -r ../../../SukiSU_patch/other/zram/lz4k/crypto/* ./crypto/
          cp -r ../../../SukiSU_patch/other/zram/lz4k_oplus ./lib/
          
          cp ../../../SukiSU_patch/other/zram/zram_patch/5.15/lz4kd.patch ./
          echo "正在应用lz4kd补丁"
          patch -p1 -F 3 < lz4kd.patch || true
          echo '完成LZ4KD补丁'

          cp ../../../SukiSU_patch/other/zram/zram_patch/5.15/lz4k_oplus.patch ./
          echo "正在应用lz4k_oplus补丁"
          patch -p1 -F 3 < lz4k_oplus.patch || true
          echo '完成lz4k_oplus补丁'

      - name: 应用隐藏某特征的补丁
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd ~/op11/kernel_platform/common
          cp ../../../SukiSU_patch/69_hide_stuff.patch ./
          patch -p1 -F 3 < 69_hide_stuff.patch
      
      - name: LZ4KD配置
        run: |
          echo "写入LZ4KDconfig依赖"
          cd ~/op11

          rm kernel_platform/common/android/gki_aarch64_modules
          touch kernel_platform/common/android/gki_aarch64_modules
          echo "CONFIG_CRYPTO_LZ4HC=y" >> ./kernel_platform/common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_LZ4K=y" >> ./kernel_platform/common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_LZ4KD=y" >> ./kernel_platform/common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_842=y" >> ./kernel_platform/common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_LZ4K_OPLUS=y" >> ./kernel_platform/common/arch/arm64/configs/gki_defconfig
          
      - name: 添加SUSFS配置设置
        run: |
          cd ~/op11/kernel_platform
          
          # Add KSU configuration settings
          echo "CONFIG_KSU=y" >> ./common/arch/arm64/configs/gki_defconfig          
          echo "CONFIG_KPM=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_MANUAL_HOOK=y" >> ./common/arch/arm64/configs/gki_defconfig
          
          # Add additional tmpfs config setting
          echo "CONFIG_TMPFS_XATTR=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_TMPFS_POSIX_ACL=y" >> ./common/arch/arm64/configs/gki_defconfig
          
          # Add additional config setting
          echo "CONFIG_IP_NF_TARGET_TTL=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_IP6_NF_TARGET_HL=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_IP6_NF_MATCH_HL=y" >> ./common/arch/arm64/configs/gki_defconfig

          # Add BBR Config
          echo "CONFIG_TCP_CONG_ADVANCED=y" >> ./common/arch/arm64/configs/gki_defconfig 
          echo "CONFIG_TCP_CONG_BBR=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_SCH_FQ=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_TCP_CONG_BIC=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_TCP_CONG_WESTWOOD=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_TCP_CONG_HTCP=n" >> ./common/arch/arm64/configs/gki_defconfig 

          # Remove check_defconfig
          sed -i 's/check_defconfig//' ./common/build.config.gki

          # Add SUSFS configuration settings
          echo "CONFIG_KSU_SUSFS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./common/arch/arm64/configs/gki_defconfig

      
      - name: 配置内核名称
        run: |
          cd ~/op11/kernel_platform

          sed -i '$s|echo "\$res"|echo "-android13-8-susfs4ksu-mJtUyT"|' ./common/scripts/setlocalversion

          # Run perl command to modify UTS_VERSION
          perl -pi -e 's{UTS_VERSION="\$\(echo \$UTS_VERSION \$CONFIG_FLAGS \$TIMESTAMP \| cut -b -\$UTS_LEN\)"}{UTS_VERSION="#1 SMP PREEMPT Sat Apr 20 04:20:00 UTC 2024"}' ./common/scripts/mkcompile_h
          
          echo "Building the kernel..."
          sed -i 's/-dirty//' ./common/scripts/setlocalversion
          rm -rf ./common/android/abi_gki_protected_exports_*
          sed -i "/stable_scmversion_cmd/s/-maybe-dirty//g" ./build/kernel/kleaf/impl/stamp.bzl
          sed -E -i '/^CONFIG_LOCALVERSION=/ s/(.*)"$/\1"/' ./common/arch/arm64/configs/gki_defconfig

      - name: Build with retry
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 30
          max_attempts: 3
          retry_on: timeout
          command: |
            set -e
            set -x
            cd ~/op11
            echo "Building the kernel..."
            ./kernel_platform/oplus/build/oplus_build_kernel.sh kalama gki
      - name: 修补 Image 文件
        run: |
          cd ~/op11/
          cp ./SukiSU_patch/kpm/patch_linux
          chmod 777 ./patch_linux
          ./patch_linux
          mv ./oImage ../AnyKernel3/Image

      - name: 创建ZIP文件
        run: |
          cd ~/AnyKernel3
          ZIP_NAME=android13-5.15-149-AnyKernel3.zip"
          echo "Creating zip file: $ZIP_NAME..."
          mv ../Image ./Image
          zip -r "../$ZIP_NAME" ./*

      - name: 上传编译资产
        uses: actions/upload-artifact@v4
        with:
          name: android13-5.15
          path: |
            *AnyKernel3.zip
